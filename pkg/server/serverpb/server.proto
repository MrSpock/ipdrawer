syntax = "proto3";
package serverpb;

import "google/api/annotations.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";

message DrawIPRequest {
  string ip = 1 [(validator.field) = {regex: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"}];
  int32 mask = 2 [(validator.field) = {int_gt: -1, int_lt: 33}];
  repeated Tag tags = 3;
}

message DrawIPResponse {
  string ip = 1;
}

message GetPrefixIncludingIPRequest {
  string ip = 1 [(validator.field) = {regex: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"}];
}

message GetPrefixIncludingIPResponse {}

message ActivateIPRequest {
  string ip = 1 [(validator.field) = {regex: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"}];
}

message ActivateIPResponse {}

message GetPrefixRequest {
  string ip = 1 [(validator.field) = {regex: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"}];
  int32 mask = 2 [(validator.field) = {int_gt: -1, int_lt: 33}];
}

message GetPrefixResponse {
  string ipnet = 1 [(validator.field) = {regex: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([0-9]|1[0-9]|2[0-9]|3[0-2])$"}];
  repeated string default_gateways = 2;
  string broadcast = 3;
  string netmask = 4;
  repeated Tag tags = 5;
}

message CreatePrefixRequest {
  string ip = 1 [(validator.field) = {regex: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"}];
  int32 mask = 2 [(validator.field) = {int_gt: -1, int_lt: 33}];
  repeated string default_gateways = 3;
  string broadcast = 4;
  string netmask = 5;
  repeated Tag tags = 6;
}

message CreatePrefixResponse {}

message CreatePoolRequest {
  string ip = 1 [(validator.field) = {regex: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"}];
  int32 mask = 2 [(validator.field) = {int_gt: -1, int_lt: 33}];
  Pool pool = 3;
}

message CreatePoolResponse {}

message Tag {
  string key = 1 [(validator.field) = {string_not_empty: true}];
  string value = 2 [(validator.field) = {string_not_empty: true}];
}

message Pool {
  string start = 1 [(validator.field) = {regex: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"}];
  string end = 2 [(validator.field) = {regex: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"}];
  int32 status = 3;
  repeated Tag tags = 4;
}

service PrefixService {
  rpc DrawIP(DrawIPRequest) returns (DrawIPResponse) {
    option (google.api.http) = {
      get: "/api/prefix/{ip}/{mask}/drawip"
    };
  };

  rpc GetPrefixIncludingIP(GetPrefixIncludingIPRequest) returns (GetPrefixIncludingIPResponse) {
    option (google.api.http) = {
      get: "/api/ip/{ip}/prefix"
    };
  };

  rpc ActivateIP(ActivateIPRequest) returns (ActivateIPResponse) {
    option (google.api.http) = {
      post: "/api/ip/{ip}/activate"
    };
  };

  rpc GetPrefix(GetPrefixRequest) returns (GetPrefixResponse) {
    option (google.api.http) = {
      post: "/api/prefix/{ip}/{mask}"
    };
  };

  rpc CreatePrefix(CreatePrefixRequest) returns (CreatePrefixResponse) {
    option (google.api.http) = {
      post: "/api/prefix/{ip}/{mask}/create"
    };
  };

  rpc CreatePool(CreatePoolRequest) returns (CreatePoolResponse) {
    option (google.api.http) = {
      post: "/api/prefix/{ip}/{mask}/pool/create"
      body: "*"
    };
  };
}
